name: Monorepo CI

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      changed-modules: ${{ steps.detect.outputs.modules }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Detect changed modules
        id: detect
        run: |
          chmod +x ./config/monorepo/change-detection/detect-changed-modules.sh
          modules=$(./config/monorepo/change-detection/detect-changed-modules.sh origin/main)
          echo "modules=$modules" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        module: ${{ fromJson(needs.setup.outputs.changed-modules || '[]') }}
    if: matrix.module != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build changed module
        run: |
          chmod +x ./config/monorepo/scripts/build-module.sh
          ./config/monorepo/scripts/build-module.sh ${{ matrix.module }}

  full-orchestration:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make orchestrator executable
        run: chmod +x ./config/monorepo/orchestration/release-orchestrator.sh

      - name: Run release orchestrator
        run: ./config/monorepo/orchestration/release-orchestrator.sh
