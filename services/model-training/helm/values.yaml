replicaCount: 2

image:
  repository: aic-aipaas/model-training-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8001"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8001

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  hosts:
    - host: model-training.aic-aipaas.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: model-training-tls
      hosts:
        - model-training.aic-aipaas.local

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
    nvidia.com/gpu: 1
  requests:
    cpu: 1000m
    memory: 2Gi
    nvidia.com/gpu: 1

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  workload-type: ai-training

tolerations:
  - key: nvidia.com/gpu
    operator: Equal
    value: "true"
    effect: NoSchedule

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - model-training-service
        topologyKey: kubernetes.io/hostname

env:
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: model-training-secrets
        key: database-url
  - name: REDIS_URL
    valueFrom:
      secretKeyRef:
        name: model-training-secrets
        key: redis-url
  - name: MLFLOW_TRACKING_URI
    value: "http://mlflow:5000"
  - name: S3_BUCKET
    value: "aic-aipaas-models"
  - name: AUTH_SERVICE_URL
    value: "http://auth-service:8000"
  - name: AWS_DEFAULT_REGION
    value: "us-west-2"

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Persistent volumes for model storage
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteMany
  size: 100Gi
  mountPath: /models

# Data storage for datasets
dataStorage:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteMany
  size: 500Gi
  mountPath: /data

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres123"
    username: "modeltraining"
    password: "modeltraining123"
    database: "model_training"
  primary:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "redis123"
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  labels:
    app: model-training-service
  interval: 30s
  path: /metrics

# RBAC for Kubernetes API access
rbac:
  create: true
  rules:
    - apiGroups: ["batch"]
      resources: ["jobs"]
      verbs: ["get", "list", "create", "update", "patch", "delete"]
    - apiGroups: [""]
      resources: ["pods", "nodes"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["persistentvolumeclaims"]
      verbs: ["get", "list", "create"]

# Job templates for training workers
jobTemplate:
  restartPolicy: Never
  backoffLimit: 3
  ttlSecondsAfterFinished: 86400
  resources:
    limits:
      cpu: 4000m
      memory: 8Gi
      nvidia.com/gpu: 2
    requests:
      cpu: 2000m
      memory: 4Gi
      nvidia.com/gpu: 2
  nodeSelector:
    workload-type: ai-training
  tolerations:
    - key: nvidia.com/gpu
      operator: Equal
      value: "true"
      effect: NoSchedule
