version: '3.8'

services:
  # Core Databases
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: nexus
      POSTGRES_DB: nexus
      POSTGRES_PASSWORD: nexus-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - nexus-net

  mongodb:
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: nexus
      MONGO_INITDB_ROOT_PASSWORD: nexus-password
      MONGO_INITDB_DATABASE: nexus
    volumes:
      - mongodb-data:/data/db
    ports:
      - "17017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  redis:
    image: redis:7.2-alpine
    command: redis-server --requirepass nexus-password
    volumes:
      - redis-data:/data
    ports:
      - "16379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  # Apache Kafka for Event Streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - nexus-net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka-data:/var/lib/kafka/data
    ports:
      - "29092:29092"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  # Core Microservices
  authorization-service:
    build:
      context: ../../apps/backend-services/authorization-service
      dockerfile: Dockerfile
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=nexus
      - DB_USER=nexus
      - DB_PASSWORD=nexus-password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=nexus-password
      - KAFKA_BROKERS=kafka:9092
      - LOG_LEVEL=debug
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  api-gateway-service:
    build:
      context: ../../apps/backend-services/api-gateway-service
      dockerfile: Dockerfile
    environment:
      - PORT=8081
      - KONG_ADMIN_URL=http://kong:8001
      - AUTH_SERVICE_URL=http://authorization-service:8080
      - KAFKA_BROKERS=kafka:9092
      - LOG_LEVEL=debug
    ports:
      - "8081:8081"
    depends_on:
      authorization-service:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  user-management-service:
    build:
      context: ../../apps/backend-services/user-management-service
      dockerfile: Dockerfile
    environment:
      - PORT=8082
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=nexus
      - DB_USER=nexus
      - DB_PASSWORD=nexus-password
      - MONGODB_URI=mongodb://nexus:nexus-password@mongodb:27017/nexus
      - KAFKA_BROKERS=kafka:9092
      - LOG_LEVEL=debug
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  configuration-service:
    build:
      context: ../../apps/backend-services/configuration-service
      dockerfile: Dockerfile
    environment:
      - PORT=8083
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=nexus
      - DB_USER=nexus
      - DB_PASSWORD=nexus-password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=nexus-password
      - KAFKA_BROKERS=kafka:9092
      - LOG_LEVEL=debug
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  discovery-service:
    build:
      context: ../../apps/backend-services/discovery-service
      dockerfile: Dockerfile
    environment:
      - PORT=8084
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=nexus-password
      - KAFKA_BROKERS=kafka:9092
      - LOG_LEVEL=debug
    ports:
      - "8084:8084"
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

  health-check-service:
    build:
      context: ../../apps/backend-services/health-check-service
      dockerfile: Dockerfile
    environment:
      - PORT=8085
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=nexus-password
      - KAFKA_BROKERS=kafka:9092
      - LOG_LEVEL=debug
    ports:
      - "8085:8085"
    depends_on:
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nexus-net

volumes:
  postgres-data:
  mongodb-data:
  redis-data:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:

networks:
  nexus-net:
    driver: bridge
    external: true
