apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-service
  namespace: aic-ai-ml
  labels:
    app: mlflow-service
    tier: ai-ml
    version: v1.0.0
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mlflow-service
  template:
    metadata:
      labels:
        app: mlflow-service
        tier: ai-ml
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: mlflow-service
        image: python:3.9-slim
        command:
        - /bin/bash
        - -c
        - |
          pip install mlflow[extras]==2.7.1 psycopg2-binary boto3 prometheus-client
          mlflow server \
            --backend-store-uri postgresql://postgres:password@postgresql-service.aic-platform:5432/mlflow_db \
            --default-artifact-root s3://002aic-ai-ml-models/mlflow-artifacts \
            --host 0.0.0.0 \
            --port 5000 \
            --serve-artifacts
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: aws-secret-access-key
        - name: MLFLOW_TRACKING_USERNAME
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: mlflow-tracking-username
        - name: MLFLOW_TRACKING_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlflow-secret
              key: mlflow-tracking-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: mlflow-storage
          mountPath: /mlflow
      volumes:
      - name: mlflow-storage
        persistentVolumeClaim:
          claimName: mlflow-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: aic-ai-ml
  labels:
    app: mlflow-service
    tier: ai-ml
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: mlflow-service
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc
  namespace: aic-ai-ml
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# MLflow UI Service (LoadBalancer for external access)
apiVersion: v1
kind: Service
metadata:
  name: mlflow-ui
  namespace: aic-ai-ml
  labels:
    app: mlflow-service
    tier: ai-ml
spec:
  type: LoadBalancer
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    app: mlflow-service
