apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: aic-platform
  labels:
    app: postgresql
    tier: database
spec:
  serviceName: postgresql-service
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        tier: database
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "aic_platform"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
        - name: postgresql-init
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgresql-init
        configMap:
          name: postgresql-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgresql-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: aic-platform
  labels:
    app: postgresql
    tier: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgresql
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: aic-platform
type: Opaque
data:
  # Base64 encoded password - replace with secure value
  password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-init-scripts
  namespace: aic-platform
data:
  01-create-databases.sql: |
    -- Create databases for each service
    CREATE DATABASE auth_db;
    CREATE DATABASE config_db;
    CREATE DATABASE discovery_db;
    CREATE DATABASE health_db;
    CREATE DATABASE gateway_db;
    
    -- Create users for each service (optional, for better security)
    CREATE USER auth_user WITH PASSWORD 'auth_password';
    CREATE USER config_user WITH PASSWORD 'config_password';
    CREATE USER discovery_user WITH PASSWORD 'discovery_password';
    CREATE USER health_user WITH PASSWORD 'health_password';
    CREATE USER gateway_user WITH PASSWORD 'gateway_password';
    
    -- Grant permissions
    GRANT ALL PRIVILEGES ON DATABASE auth_db TO auth_user;
    GRANT ALL PRIVILEGES ON DATABASE config_db TO config_user;
    GRANT ALL PRIVILEGES ON DATABASE discovery_db TO discovery_user;
    GRANT ALL PRIVILEGES ON DATABASE health_db TO health_user;
    GRANT ALL PRIVILEGES ON DATABASE gateway_db TO gateway_user;
