apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-storage-service
  namespace: aic-devops
  labels:
    app: file-storage-service
    tier: devops
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: file-storage-service
  template:
    metadata:
      labels:
        app: file-storage-service
        tier: devops
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: file-storage-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: file-storage-service
        image: 002aic/file-storage-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: devops-database-secret
              key: file-storage-db-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: devops-redis-secret
              key: url
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: devops-storage-secret
              key: s3-access-key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: devops-storage-secret
              key: s3-secret-key
        - name: S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: devops-storage-secret
              key: s3-bucket
        - name: S3_REGION
          valueFrom:
            secretKeyRef:
              name: devops-storage-secret
              key: s3-region
        - name: MINIO_ENDPOINT
          value: "http://minio-service.aic-devops.svc.cluster.local:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: devops-storage-secret
              key: minio-access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: devops-storage-secret
              key: minio-secret-key
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: file-storage
          mountPath: /app/storage
        - name: temp-storage
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: file-storage-service-config
      - name: file-storage
        persistentVolumeClaim:
          claimName: file-storage-pvc
      - name: temp-storage
        emptyDir:
          sizeLimit: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: file-storage-service
  namespace: aic-devops
  labels:
    app: file-storage-service
    tier: devops
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: file-storage-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: file-storage-service
  namespace: aic-devops
  labels:
    app: file-storage-service
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: file-storage-pvc
  namespace: aic-devops
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: file-storage-service-config
  namespace: aic-devops
data:
  config.yaml: |
    server:
      port: 8080
      timeout: 300s
    storage:
      primary_backend: "s3"
      backup_backend: "minio"
      local_cache_enabled: true
      cache_size: "10GB"
      cache_ttl: 3600s
      storage_path: "/app/storage"
      temp_path: "/tmp"
    file_handling:
      max_file_size: "1GB"
      allowed_extensions: [".jpg", ".jpeg", ".png", ".gif", ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx", ".txt", ".csv", ".json", ".xml", ".zip", ".tar", ".gz"]
      virus_scanning: true
      content_type_validation: true
      duplicate_detection: true
    processing:
      image_optimization: true
      thumbnail_generation: true
      document_preview: true
      metadata_extraction: true
      compression_enabled: true
    security:
      encryption_at_rest: true
      encryption_in_transit: true
      access_control: true
      audit_logging: true
      signed_urls: true
      url_expiration: 3600s
    cdn:
      enabled: true
      provider: "cloudflare"
      cache_control: "public, max-age=31536000"
      compression: true
    backup:
      enabled: true
      schedule: "0 2 * * *"
      retention_days: 30
      cross_region_replication: true
    monitoring:
      metrics_enabled: true
      performance_tracking: true
      usage_analytics: true
    logging:
      level: info
      format: json
